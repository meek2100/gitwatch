---
name: Gitwatch QA

on:
  push:
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: {}

jobs:
  #-------------------------------------------------------------------------
  super-lint:
    name: Lint Code Base
    if: "! contains(github.event.head_commit.message, '#noaction')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Lint Code Base
        uses: super-linter/super-linter@2bdd90ed3262e023ac84bf8fe35dc480721fc1f2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .
          FILTER_REGEX_EXCLUDE: (^|/)tests/|^\.editorconfig$
          # Disable potentially conflicting linters/formatters
          VALIDATE_PRETTIER: false
          VALIDATE_JAVASCRIPT_ES: false
          VALIDATE_TYPESCRIPT_ES: false
          VALIDATE_CSS: false
          VALIDATE_JSON: false
          VALIDATE_JSONC: false
          VALIDATE_JSX: false
          VALIDATE_TSX: false
          VALIDATE_VUE: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_SHELL_SHFMT: false # Explicitly disable shfmt due to panic

  #-------------------------------------------------------------------------
  bats:
    name: BATS Tests
    if: "! contains(github.event.head_commit.message, '#noaction')"
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    steps:
      # Node setup
      - name: Setup node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903

      # BATS install via npm
      - name: Setup BATS (bats-core via npm)
        run: sudo npm install -g bats # This should install bats-core

      - name: Install gitwatch dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get -y update
            sudo apt-get -y install inotify-tools util-linux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install fswatch flock bash
          else
            echo "Unsupported OS: $RUNNER_OS"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          submodules: true
          fetch-depth: 0
          persist-credentials: false

      # - name: Setup upterm session # Preserved commented-out step
      #   uses: lhotari/action-upterm@v1

      - name: Run tests individually
        shell: bash
        run: |
          git config --global user.email "test@email.com"
          git config --global user.name "test user"

          cd tests

          # Tests should now load helpers from the relative paths
          echo "Running commitcmd.bats..."
          bats commitcmd.bats
          echo "Running commitlog.bats..."
          bats commitlog.bats
          echo "Running notify-ignore.bats..."
          bats notify-ignore.bats
          echo "Running pull-rebase.bats..."
          bats pull-rebase.bats
          echo "Running remotedirs.bats..."
          bats remotedirs.bats
          echo "Running spaces.bats..."
          bats spaces.bats
          echo "Running status-change.bats..."
          bats status-change.bats
          echo "Running sync.bats..."
          bats sync.bats
          echo "Finished running tests"
