---
name: Gitwatch QA

on:
  push:
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  #-------------------------------------------------------------------------
  super-lint:
    name: Lint Code Base
    if: "! contains(github.event.head_commit.message, '#noaction')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    # For the time being, I'm giving up on Super Linter. It's a great tool,
    # but it's currently broken, and it's taking more time to make it work than
    # it's worth.
    # - name: Lint Code Base
    #   uses: github/super-linter@v4
    #   env:
    #     DEFAULT_BRANCH: master
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     # Linter is having errors at symbolic link, appears to be
    #     # this bug:
    #     # https://github.com/github/super-linter/issues/1400
    #     # https://github.com/kucherenko/jscpd/issues/481
    #     # Test files are bats files, which don't follow bash standards
    #     # FILTER_REGEX_EXCLUDE: \.github/linters/\.markdown-lint.yml | tests\.*
    #     # FILTER_REGEX_EXCLUDE: tests\.*

  #-------------------------------------------------------------------------
  bats:
    name: BATS Tests
    if: "! contains(github.event.head_commit.message, '#noaction')"
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    steps:
      # Node setup
      - name: Setup node
        uses: actions/setup-node@v4

      # BATS install via npm
      - name: Setup BATS (bats-core via npm)
        run: sudo npm install -g bats # This should install bats-core

      - name: Install gitwatch dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get -y update
            sudo apt-get -y install inotify-tools util-linux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install fswatch flock bash
          else
            echo "Unsupported OS: $RUNNER_OS"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Explicitly set submodules: true (or recursive if needed)
          # to ensure they are checked out along with the main repo.
          submodules: true
          fetch-depth: 0

      # - name: Setup upterm session # Preserved commented-out step
      #   uses: lhotari/action-upterm@v1

      - name: Run tests individually
        shell: bash
        run: |
          git config --global user.email "test@email.com"
          git config --global user.name "test user"

          cd tests

          # Tests should now load helpers from the relative paths
          echo "Running commitcmd.bats..."
          bats commitcmd.bats
          echo "Running commitlog.bats..."
          bats commitlog.bats
          echo "Running notify-ignore.bats..."
          bats notify-ignore.bats
          echo "Running pull-rebase.bats..."
          bats pull-rebase.bats
          echo "Running remotedirs.bats..."
          bats remotedirs.bats
          echo "Running spaces.bats..."
          bats spaces.bats
          echo "Running status-change.bats..."
          bats status-change.bats
          echo "Running sync.bats..."
          bats sync.bats
          echo "Finished running tests"
